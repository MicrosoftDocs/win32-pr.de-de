### YamlMime:FAQ
metadata:
  title: Lokalisierungsunterstützung für allgemeine Steuerelemente
  description: In diesem Thema wird die Unterstützung für nationale Sprachen beschrieben, die in die allgemeinen Steuerelemente integriert sind.
  ms.assetid: c5720198-9071-4213-8dad-50b4c015c5f0
  ms.topic: article
  ms.date: 05/31/2018
  ms.openlocfilehash: 8061d92050498fa95a6692243dc81bc5ef56f8ad
  ms.sourcegitcommit: 61a4c522182aa1cacbf5669683d9570a3bf043b2
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 08/26/2021
  ms.locfileid: "122884646"
title: Lokalisierungsunterstützung für allgemeine Steuerelemente
summary: >
  In diesem Thema wird die Unterstützung für nationale Sprachen beschrieben, die in die allgemeinen Steuerelemente integriert sind. Die integrierte Unterstützung der landesspezifischen Sprache vereinfacht die Implementierung lokalisierter Anwendungen.
sections:
- name: Wird ignoriert.
  questions:
  - question: >
      Angeben einer Sprache für die allgemeinen Steuerelemente
    answer: >
      Wenn Sie eine Sprache für die allgemeinen Steuerelemente angeben möchten, die sich von der Systemsprache unterscheiden, rufen Sie [**InitMUILanguage auf.**](/windows/desktop/api/Commctrl/nf-commctrl-initmuilanguage) Die von dieser Funktion angegebene Sprache gilt nur für den Prozess, aus dem die Funktion aufgerufen wird.


      Rufen Sie [**GetMUILanguage**](/windows/desktop/api/Commctrl/nf-commctrl-getmuilanguage)auf, um die Sprache zu bestimmen, die derzeit von den allgemeinen Steuerelementen verwendet wird. Sie gibt den Wert zurück, der durch einen vorherigen Aufruf von [**InitMUILanguage festgelegt wurde.**](/windows/desktop/api/Commctrl/nf-commctrl-initmuilanguage) Die zurückgegebene Sprache wurde für den Prozess angegeben, aus dem sie aufgerufen wird. Wenn **InitMUILanguage** nicht oder von einem anderen Prozess aufgerufen wurde, gibt **GetMUILanguage** einen Standardwert zurück.
  - question: >
      Angeben einer Sprache für Steuerelemente in einem Dialogfeld
    answer: "Im Gegensatz zu gängigen Steuerelementen verwenden vordefinierte Steuerelemente wie Schaltflächen oder Bearbeitungsfelder standardmäßig nicht die aktuelle Systemsprache. Das systemeigene Schriftart-Steuerelement ist ein unsichtbares Steuerelement, das im Hintergrund funktioniert, damit die vordefinierten Steuerelemente eines Dialogfelds die aktuelle Systemsprache anzeigen können.\n\nGehen Sie wie folgt vor, um das systemeigene Schriftartsteuer steuerelement zu verwenden.\n\n1.  Initialisieren Sie das native Schriftartsteuerobjekt, indem [**Sie InitCommonControlsEx aufrufen.**](/windows/desktop/api/Commctrl/nf-commctrl-initcommoncontrolsex) Legen Sie **den dwICC-Member** der [**INITCOMMONCONTROLSEX-Struktur,**](/windows/win32/api/commctrl/ns-commctrl-initcommoncontrolsex) auf die *lpInitCtrls* zeigt, auf \\_ NATIVEFNTCTL \\_ CLASS fest.\n2.  Fügen Sie das Steuerelement dem Ressourcenskript für das Dialogfeld hinzu. Legen Sie mindestens eines der folgenden Formatflags fest, um anzugeben, welche Steuerelemente betroffen sind. \n\n      <style type=\"text/css\">.tg {border-collapse:collapse;border-spacing:0;} .tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px; overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px; font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top} &lt; /style &gt;<table class=\"tg\">\n      <thead>\n      <tr>\n      <th class=\"tg-0pky\">Flag</th>\n      <th class=\"tg-0pky\">Gilt für:</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ EDIT</td>\n      <td class=\"tg-0pky\">Bearbeiten von Steuerelementen</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ STATIC</td>\n      <td class=\"tg-0pky\">Statische Steuerelemente</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ LISTCOMBO</td>\n      <td class=\"tg-0pky\">List-, ComboBox-, List-View- und ComboBoxEx-Steuerelemente</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">\\_NFS-SCHALTFLÄCHE</td>\n      <td class=\"tg-0pky\">Schaltflächen-Steuerelemente</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ ALL</td>\n      <td class=\"tg-0pky\">Alle Steuerelemente</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ USEFONTASSOC</td>\n      <td class=\"tg-0pky\">Ostasiatische Plattform. Das -Steuerelement verwendet die Schriftarten-Zuordnungsfunktion, anstatt zur nativen Schriftart zu wechseln. Dies wird von allen anderen Plattformen ignoriert. Dies ist für Windows Vista veraltet und wird in comctl v6 nicht unterstützt. Dies ist in comctl v5 aus Legacygründen vorhanden.</td>\n      </tr>\n      </tbody>\n      </table>\n     \n\nIm folgenden Beispiel wird veranschaulicht, wie einem Ressourcenskript ein systemeigenes Schriftartsteuer steuerelement hinzugefügt wird. Dies bewirkt, dass die Bearbeitungs-, Listen- und Kombinationsfeldsteuerelemente des Dialogfelds Text in der aktuellen Systemsprache anzeigen.\n\n\n```\nCONTROL    \"\",-1,\"NativeFontCtl\",NFS_EDIT|NFS_LISTCOMBO,0,0,0,0\n```\n"
additionalContent: "\n## <a name=\"related-topics\"></a>Zugehörige Themen\n   [Informationen zu allgemeinen Steuerelementen](common-controls-intro.md)"
